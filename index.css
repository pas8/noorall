* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: sans;
  font-weight: 400;
}
body  * {
  overflow: hidden;
}
:root {
  --noorall_primary: #080808;
  /* --noorall_primary: antiquewhite; */
  --noorall_secondary: cadetblue;
  --noorall_border_radius: 10px;
  --noorall_scroll: var(--noorall_secondary);
}

::-webkit-scrollbar-button {
  display: none;
}
::-webkit-scrollbar {
  background: transparent;
  width: 8px;
}

p,
input,
button,
label {
  line-height: 1.42;
  font-size: 1rem;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 600;
  font-family: monospace;
}
*::after,
*::before {
  pointer-events: none;
}
a {
  display: grid;
  place-items: center;
  color: inherit !important;
}

@keyframes text_primary {
  32% {
    color: var(--noorall_primary);
    filter: invert(1);
  }
  100% {
    filter: invert(1);
    color: var(--noorall_secondary);
  }
}

@keyframes color_primary {
  46% {
    filter: invert(1);
    color: var(--noorall_primary);
  }
  100% {
    color: var(--noorall_secondary);
  }
}

@keyframes bg_primary {
  42% {
    background: var(--noorall_primary);
  }
  100% {
    background: var(--noorall_secondary);
  }
}

@keyframes color_bg_primary {
  42% {
    color: var(--noorall_primary);
  }
  100% {
    color: var(--noorall_secondary);
  }
}

@keyframes bg_secondary {
  38% {
    background: var(--noorall_primary);
  }
  100% {
    background: var(--noorall_secondary);
  }
}

::-webkit-scrollbar-thumb {
  background: var(--noorall_scroll);
  border-radius: 8px;
}

body {
  animation: bg_primary 1s linear forwards paused -0.5s;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

table,
section {
  border-spacing: 0;

  padding-top: 0.8rem;
  border-radius: var(--noorall_border_radius);
  position: relative;
}

img {
  border-radius: var(--noorall_border_radius);
  max-width: 42%;
  object-fit: cover;
}

section {
  margin: 2.8rem 0;
  padding: 1rem;
  gap: 0.6rem;
  display: flex;
  animation: bg_secondary 1s linear forwards paused;
  animation-delay: -0.5s;
  flex-direction: column;
}
section::after,
table::after {
  content: '';
  border-radius: var(--noorall_border_radius);
  opacity: 0.12;
  pointer-events: none;
  position: absolute;
  inset: 0;
  border: 1px solid currentColor;
}

section > article {
  animation: text_primary 1s linear forwards paused -0.5s;
}

span[__code] {
  position: relative;
  padding: 0.21rem 0.42rem;
  border-radius: var(--noorall_border_radius);
}

span[__code]::after {
  pointer-events: none;
  position: absolute;
  opacity: 0.12;
  border-radius: var(--noorall_border_radius);

  content: '';
  animation: 1s bg_secondary linear forwards paused -0.5s;
  filter: invert(0.12);
  inset: 0;
}
section > div,
section > blockquote {
  margin-bottom: 0.6rem;
}
section > div:not([__form]),
footer > div {
  animation: color_primary 1s linear forwards paused -0.5s;
}
section > div > img {
  filter: invert(1) drop-shadow(0.42rem 0.42rem currentColor);
  float: left;
  margin-right: 1rem;
}

section > div > img[__right] {
  float: right;
  margin: 0;
  margin-top: -0.42rem;
  margin-left: 1rem;
}
section > div > img[__center] {
  width: 100%;
  float: inline-end;
  margin: 0;

  margin-bottom: 1rem;
}

main {
  flex-grow: 1;
  margin-top: 4rem;
}

header,
footer {
  padding: 0 1rem;
}

*[__main],
main {
  padding: 0 5%;
}

header,
footer > div {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

header {
  z-index: 20;
  background-color: transparent;
  animation: color_primary 1s linear forwards paused -0.5s;
}

header abbr,
*[__abbr] {
  display: flex;
  gap: 0.42rem;
}

header abbr svg,
*[__abbr] svg {
  width: 2.8rem;
  height: 2.8rem;
  fill: currentColor;
}

header > * {
  z-index: 4;
}
header::before,
header::after,
header {
  border-bottom-left-radius: var(--noorall_border_radius);
  border-bottom-right-radius: var(--noorall_border_radius);

  left: 0;
  right: 0;
  top: 0;
  position: fixed;
  height: 4rem;
}

header::before,
header::after {
  content: '';
  z-index: 1;

  animation: bg_primary 1s linear forwards paused;

  animation-delay: -0.5s;
  filter: invert(0.92);
  opacity: 0.8;
}

form,
*[__form] {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 0.6rem;
}

form input,
select,
*[__form] input,
select {
  width: 100%;
  transition: 0.42s ease all;
  outline: none;
  border-radius: var(--noorall_border_radius);
  padding: 0 0.8rem;
  opacity: 0.48;
  animation: text_primary 1s linear forwards paused;
  animation-delay: -0.5s;
  border: 1px solid;
  position: relative;

  background-color: transparent;
  height: 2.8rem;
}

form select,
*[__form] select {
  padding-left: 1.12rem;
  opacity: 0.8;
  cursor: pointer;
  font-size: 1rem;

  appearance: none;
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 8" width="30"><path fill="%23d1d1d1" d="M0,0l6,8l6-8"/></svg>')
    center right no-repeat;
  margin-bottom: 0.6rem;
}
form select:active option:first-child,
*[__form] select:active option:first-child {
  display: none;
}

form select:active option,
*[__form] select:active option {
  color: initial;
}

form input:last-child {
  order: -1;
}

form label {
  position: relative;
}

form button[__submit] {
  align-self: flex-end;
}

form label::after {
  opacity: 0.8;
}
form label::after,
form label::before {
  padding: 0rem 0.42rem;
  animation: color_primary 1s linear forwards paused;
  animation-delay: -0.5s;
  position: absolute;
  top: -2.7rem;
  pointer-events: none;
  font-size: 1rem;
  transition: 0.42s ease all;
  left: 0.8rem;
  z-index: 10;
  content: attr(__placeholder);
}

form input:valid + label::after,
form input:not(placeholder-shown):focus + label::before,
form input:valid + label::before {
  transform: translate(0, -1.24rem);
  font-size: 0.8rem;
}

form label::before {
  content: attr(__placeholder);
  color: transparent;
  animation: bg_secondary 1s linear forwards paused;
  animation-delay: -0.5s;
}
form input:focus {
  opacity: 1;
}

form input:hover {
  opacity: 0.8;
}

form input:not(placeholder-shown):focus + label::after {
  transform: translate(0, -1.24rem);
  font-size: 0.8rem;
  border-radius: var(--noorall_border_radius);
  animation: color_primary 1s linear forwards paused;
  animation-delay: -0.5s;
}

button {
  outline: none;
  font-weight: 600;
  padding: 0.6rem 1rem;
  border-radius: var(--noorall_border_radius);
  position: relative;
  border: 1px solid;
  font-size: 1.16rem;
  width: fit-content;
  text-transform: uppercase;
  animation: text_primary 1s linear forwards paused -0.5s;
  background: transparent;
}

button::after {
  content: '';
  transition: 0.42s ease all;
  z-index: 10;
  inset: 0;
  background-color: transparent;
  position: absolute;
  opacity: 0;
}

button:hover::after,
button:focus::after {
  background-color: currentColor;
  opacity: 0.24;
}

@keyframes to {
  to {
    height: 0%;
    padding-bottom: 108%;
    width: 108%;
  }
}

button:not(:hover):focus::after {
  border-radius: 50%;
  left: 50%;
  height: 0%;
  padding-bottom: 20%;
  width: 20%;

  top: 50%;
  transform: translate(-50%, -50%);
  animation: 2s to infinite;
}

button:hover {
  cursor: pointer;
}

thead tr th {
  font-size: 1.16rem;
  text-align: left;
  padding: 0 0 0.8rem 0.8rem;

  font-weight: 600;
  border-bottom: 1px solid currentColor;
}

thead {
  animation: text_primary 1s linear forwards paused -0.5s;
  margin-bottom: 1rem;
}

tbody tr td {
  padding: 0.8rem 0 0.8rem 0.8rem;
  animation: color_primary 1s linear forwards paused -0.5s;
}

tbody tr:nth-of-type(2n) {
  animation: bg_secondary 1s linear forwards paused -0.5s;
  filter: invert(0.12);
}

blockquote {
  padding-left: 0;
  animation: bg_secondary 1s linear forwards paused -0.5s;
  filter: invert(0.12);
  display: flex;
  flex-direction: column !important;
  padding: 0.8rem 1.6rem;
  position: relative;
  border-top-right-radius: var(--noorall_border_radius);
  border-bottom-right-radius: var(--noorall_border_radius);
}
blockquote::before {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  top: 0;
  z-index: 100;

  border-left: 3px solid;
}

blockquote > *,
blockquote::before {
  width: fit-content;
  animation: color_primary 1s linear forwards paused -0.5s;
}
pre {
  width: 100%;
  position: relative;
  border-radius: var(--noorall_border_radius);
}
pre::before {
  content: '';
  bottom: 0;
  top: 0;
  position: absolute;
  z-index: 10;
  animation: bg_secondary 1s linear forwards paused -0.5s;
  width: 4px;
  left: 1.1rem;
}

pre::after {
  content: '';
  inset: 0;
  position: absolute;
  animation: bg_secondary 1s linear forwards paused -0.5s;
  filter: invert(0.12);

  z-index: 1;
}
code {
  display: block;
}

code::after {
  content: 'ðŸ“‹';
  position: absolute;
  top: 4px;
  padding: 0.4rem;
  border-top-right-radius: var(--noorall_border_radius);
  border-bottom-left-radius: var(--noorall_border_radius);
  font-size: 1.8rem;
  z-index: 10;
  opacity: 0.6;

  animation: bg_secondary 1s linear forwards paused -0.5s;
  right: 4px;
}
pre:hover > code::after {
  opacity: 1;
}
pre:hover {
  cursor: copy;
}

code > * {
  position: relative;
  z-index: 4;
}
code span {
  line-height: 1.8;
  font-family: monospace;
  font-size: 1rem;
}
code span {
  opacity: 0.42;
  animation: color_primary 1s linear forwards paused -0.5s;
}

code span[__stag],
code span[__etag] {
  font-weight: 600;
  opacity: 0.92;
  animation: text_primary 1s linear forwards paused -0.5s;
}

code span[__stag] i {
  opacity: 0.6;
  font-weight: 800;
}

code span[__stag]::before {
  content: '<';
}

code span[__etag]::before {
  content: '</';
}
code span[__stag]::after,
span[__etag]::after {
  content: '>';
}

footer {
  animation: 1s bg_secondary linear forwards paused -0.5s;

  background-color: cadetblue;
}
footer > div {
  font-weight: 600;
  padding: 1.42rem 0;
}

button[__icon] {
  opacity: 1;
  display: grid;
  place-items: center;
  height: fit-content;
  border-radius: 50%;
  padding: 0rem;
  overflow: hidden;
  width: fit-content;
  animation: color_primary 1s linear forwards paused -0.5s;
}

button[__icon] svg {
  transition: 0.42s ease all;
  width: 2rem;
  border-radius: 50%;
  padding: 0.8rem;
  box-sizing: content-box;
  border: 1px solid transparent;
  fill: currentColor;
}

button[__icon]::after,
button[__icon] svg {
  filter: invert(1);
}

button[__icon]:hover {
  border-color: transparent;
}
button[__icon]:hover svg {
  border-color: currentColor;
}

hr,
*[__hr] {
  animation: text_primary 1s linear forwards paused -0.5s;
  background-color: currentColor;
  margin: 0.8rem 0;
  height: 1px;
  border: 0;
}

*[__flex] {
  gap: 0.42rem;
  display: flex;
  flex-wrap: wrap;
}

button[__contained] {
  animation: color_primary 1s linear forwards paused -0.5s;
  background: currentColor;
  border: none;
  transition: 0.42s ease all;
  z-index: 1000;
}

button[__contained]::before {
  opacity: 1;
  pointer-events: none;
  font-size: 1rem;
  content: attr(__contained);
  z-index: 1;
  animation: text_primary 1s linear forwards paused -0.5s;
}
button[__clear] {
  border: none !important;
}

button[__contained]:hover {
  opacity: 0.8;
  filter: invert(0.8) !important  ;
}
button[__contained]:hover::after,
button[__contained]:focus::after {
  filter: invert(0.4);
  background-color: currentColor;
  opacity: 0.42;
}

h1 {
  letter-spacing: -0.16rem;
  font-size: 2.62rem;
}

h2 {
  font-size: 3.06rem;
}

h3 {
  font-size: 1.62rem;
}

h4 {
  font-size: 1.89rem;
}

h5 {
  font-size: 1.16rem;
}

h6 {
  font-size: 1.16rem;
}

@media (min-width: 40rem) {
  *[__main],
  main {
    padding: 0 10%;
  }
  h1 {
    font-size: 3.06rem;
  }

  h3 {
    font-size: 1.89rem;
  }

  h5 {
    font-size: 1.62rem;
  }
}

@media (min-width: 80rem) {
  *[__main],
  main {
    padding: 0 16%;
  }

  h1 {
    font-size: 4.94rem;
  }
  h3 {
    font-size: 3.06rem;
  }
  h5 {
    font-size: 1.89rem;
  }
}

@media (min-width: 120rem) {
  *[__main],
  main {
    padding: 0 22%;
  }

  h1 {
    font-size: 8rem;
  }
  h3 {
    font-size: 4.96rem;
  }
  h5 {
    font-size: 3.06rem;
  }
}

*[__al_center] {
  align-items: center;
}
*[__al_end] {
  align-items: flex-end;
}

*[__fd_column] {
  flex-direction: column;
}

*[__gap_2] {
  gap: 1rem;
}

*[__p_relative] {
  position: relative;
}

*[__p_absolute] {
  position: absolute;
}

*[__inset] {
  inset: 0;
}

*[__full_right] {
  top: 0;
  bottom: 0;
  right: 0;
}
